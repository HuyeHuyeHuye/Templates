//structure with operator overloading (sorting)
struct tupple{
	int l,r,idx;
	bool operator<(const tupple &x) const{
		return (l == x.l ? r <= x.r : l < l.r);
	}
};

// dp ... all possible sum (here N = maximum possible total sum + constant;)
      vi dp(N);
    	dp[0] = 1;
    	for(int i = 1; i <= n; i++){
    		for(int j = N - 1; j >= 0; j--){
    			if(dp[j]) dp[j + s[i]] = 1;
    		}
    	}
     
// by using bitset
      bitset < N > dp;
    	dp[0] = 1;
    	for(int i = 1; i <= n; i++){
    		dp |= dp << s[i];
    	}

     
//bitset pass by reference
bool is_ok(ibitset< N > &dp){
	....
}
// make zero all the bits of a bitset
   dp.reset();
